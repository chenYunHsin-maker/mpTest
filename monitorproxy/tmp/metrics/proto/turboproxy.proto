syntax = "proto3";

package metrics;

import "common.proto";

// TurboProxy is the service interface to report a variety of metrics of TurboProxy.
service TurboProxy {
  // ReportSCTP reports SCTP statistics of an Edge at a time
  rpc ReportSCTP(SCTPStat) returns (Empty) {}

}

// SCTPStat contains all SCTP statistics
message SCTPStat {
  // The input statistics
  // @inject_tag: label:"type=input"
  SCTPInputMetrics input_metrics = 1;
  // The output statistics
  // @inject_tag: label:"type=output"
  SCTPOutputMetrics output_metrics = 2;
  // The congestion control information
  // @inject_tag: label:"type=congestion"
  SCTPCongestionMetrics congestion_metrics = 3;
  // The packet drop statistics
  // @inject_tag: label:"type=drop"
  SCTPDropMetrics drop_metrics = 4;
  // The timeout statistics
  // @inject_tag: label:"type=timeout"
  SCTPTimeoutMetrics timeout_metrics = 5;
  // The other statistics
  // @inject_tag: label:"type=other"
  SCTPOtherMetrics other_metrics = 6;
}

// SCTPInputMetrics contains input statistics
message SCTPInputMetrics {
  // @inject_tag: help:"total input packets"
  uint32 recvpackets = 1;
  // @inject_tag: help:"total input datagrams"
  uint32 recvdatagrams = 2;
  // @inject_tag: help:"total packets that had data"
  uint32 recvpktwithdata = 3; 
  // @inject_tag: help:"total input SACK chunks"
  uint32 recvsacks = 4; 
  // @inject_tag: help:"total input DATA chunks"
  uint32 recvdata = 5; 
  // @inject_tag: help:"total input duplicate DATA chunks"
  uint32 recvdupdata = 6; 
  // @inject_tag: help:"total input HB chunks"
  uint32 recvheartbeat = 7;
  // @inject_tag: help:"total input HB-ACK chunks" 
  uint32 recvheartbeatack = 8;
  // @inject_tag: help:"total input ECNE chunks"
  uint32 recvecne = 9; 
  // @inject_tag: help:"total input AUTH chunks"
  uint32 recvauth = 10;  
  // @inject_tag: help:"total input chunks missing AUTH"
  uint32 recvauthmissing = 11; 
  // @inject_tag: help:"total number of invalid HMAC ids received"
  uint32 recvivalhmacid = 12; 
  // @inject_tag: help:"total number of invalid secret ids received" 
  uint32 recvivalkeyid = 13;  
  // @inject_tag: help:"total number of auth failed"
  uint32 recvauthfailed = 14;  
  // @inject_tag: help:"total fast path receives all one chunk"
  uint32 recvexpress = 15; 
  // @inject_tag: help:"total fast path multi-part data"
  uint32 recvexpressm = 16;
  // @inject_tag: help:"max receive TSN sequence number"
  uint32 recvtsn = 17;
}

// SCTPOutputMetrics contains output statistics
message SCTPOutputMetrics {
  // @inject_tag: help:"total output packets"
  uint32 sendpackets = 1;
  // @inject_tag: help:"total output SACKs"
  uint32 sendsacks = 2; 
  // @inject_tag: help:"total output DATA chunks"
  uint32 senddata = 3; 
  // @inject_tag: help:"total output retransmitted DATA chunks"
  uint32 sendretransdata = 4; 
  // @inject_tag: help:"total output fast retransmitted DATA chunks"
  uint32 sendfastretrans = 5; 
  // @inject_tag: help:"total FR's that happened more than once to same chunk (u-del multi-fralgo)."
  uint32 sendmultfastretrans = 6;
  // @inject_tag: help:"total output HB chunks"
  uint32 sendheartbeat = 7;
  // @inject_tag: help:"total output ECNE chunks"  
  uint32 sendecne = 8;  
  // @inject_tag: help:"total output AUTH chunks FIXME"
  uint32 sendauth = 9;
  // @inject_tag: help:"ip_output error counter"
  uint32 senderrors = 10;  
  // @inject_tag: help:"max send BSN sequence number"
  uint32 sendbsn = 11;
  // @inject_tag: help:"max send TSN sequence number"
  uint32 sendtsn = 12;
}

// SCTPCongestionMetrics contains congestion control information
message SCTPCongestionMetrics {
  // @inject_tag: help:"sent_queue count"
  uint32 ccsentqueuecnt = 1;
  // @inject_tag: help:"send_queue count"
  uint32 ccsendqueuecnt = 2;
  // @inject_tag: help:"pacing rate"
  uint32 ccsendpacingrate = 3; 
  // @inject_tag: help:"measure bandwidth"
  uint32 ccmeasurebw = 4;
  // @inject_tag: help:"inflight packets"
  uint32 ccinflightpkts = 5;
  // @inject_tag: help:"inflight size"
  uint32 ccinflightsize = 6;
  // @inject_tag: help:"congestion window" 
  uint32 cccwnd = 7;
  // @inject_tag: help:"minimal rtt in us"
  uint32 ccminrttus = 8;
  // @inject_tag: help:"RTO in us"
  uint32 ccrtous = 9; 
  // @inject_tag: help:"rtt in us"
  uint32 ccrttus = 10; 
}

// SCTPDropMetrics contains packet drop statistics
message SCTPDropMetrics {
  // @inject_tag: help:"Packet drop from middle box"
  uint32 pdrpfmbox = 1;
  // @inject_tag: help:"P-drop from end host"
  uint32 pdrpfehos = 2;
  // @inject_tag: help:"P-drops with data"
  uint32 pdrpmbda = 3;
  // @inject_tag: help:"P-drops, non-data, non-endhost"
  uint32 pdrpmbct = 4;
  // @inject_tag: help:"P-drop, non-endhost, bandwidth rep only" 
  uint32 pdrpbwrpt = 5;
  // @inject_tag: help:"P-drop, not enough for chunk header"
  uint32 pdrpcrupt = 6;
  // @inject_tag: help:"P-drop, not enough data to confirm"
  uint32 pdrpnedat = 7;
  // @inject_tag: help:"P-drop, where process_chunk_drop said break"
  uint32 pdrppdbrk = 8;
  // @inject_tag: help:"P-drop, could not find TSN"
  uint32 pdrptsnnf = 9;
  // @inject_tag: help:"P-drop, attempt reverse TSN lookup" 
  uint32 pdrpdnfnd = 10;
  // @inject_tag: help:"P-drop, e-host confirms zero-rwnd"
  uint32 pdrpdiwnp = 11;
  // @inject_tag: help:"P-drop, midbox confirms no space"
  uint32 pdrpdizrw = 12;
  // @inject_tag: help:"P-drop, data did not match TSN"
  uint32 pdrpbadd = 13;
  // @inject_tag: help:"P-drop, TSN's marked for Fast Retran" 
  uint32 pdrpmark = 14;
}

// SCTPTimeoutMetrics contains timeout statistics 
message SCTPTimeoutMetrics {
  // @inject_tag: help:"Number of iterator timers that fired"
  uint32 timoiterator = 1;
  // @inject_tag: help:"Number of T3 data time outs"
  uint32 timodata = 2;
  // @inject_tag: help:"Number of window probe (T3) timers that fired"
  uint32 timowindowprobe = 3; 
  // @inject_tag: help:"Number of INIT timers that fired"
  uint32 timoinit = 4;
  // @inject_tag: help:"Number of sack timers that fired"
  uint32 timosack = 5;
  // @inject_tag: help:"Number of shutdown timers that fired"
  uint32 timoshutdown = 6;
  // @inject_tag: help:"Number of heartbeat timers that fired" 
  uint32 timoheartbeat = 7;
  // @inject_tag: help:"Number of times a cookie timeout fired" 
  uint32 timocookie = 8;
  // @inject_tag: help:"Number of times an endpoint changed its cookie secret"
  uint32 timosecret = 9;
  // @inject_tag: help:"Number of PMTU timers that fired"
  uint32 timopathmtu = 10;
  // @inject_tag: help:"Number of shutdown ack timers that fired"
  uint32 timoshutdownack = 11; 
  // @inject_tag: help:"Number of shutdown guard timers that fired"
  uint32 timoshutdownguard = 12;
  // @inject_tag: help:"Number of stream reset timers that fired"
  uint32 timostrmrst = 13;
  // @inject_tag: help:"Number of early FR timers that fired"
  uint32 timoearlyfr = 14;
  // @inject_tag: help:"Number of times an asconf timer fired" 
  uint32 timoasconf =  15;
  // @inject_tag: help:"Number of times a prim_deleted timer fired"
  uint32 timodelprim = 16;
  // @inject_tag: help:"Number of times auto close timer fired"
  uint32 timoautoclose = 17;
  // @inject_tag: help:"Number of asoc free timers expired"
  uint32 timoassockill = 18;
  // @inject_tag: help:"Number of inp free timers expired"
  uint32 timoinpkill = 19;
}

// SCTPOtherMetrics contains other statistics
message SCTPOtherMetrics {
  // @inject_tag: help:"packet shorter than header"
  uint32 hdrops = 1; 
  // @inject_tag: help:"checksum error"
  uint32 badsum = 2;
  // @inject_tag: help:"no endpoint for port"
  uint32 noport = 3;
  // @inject_tag: help:"bad v-tag"
  uint32 badvtag = 4;
  // @inject_tag: help:"bad SID"
  uint32 badsid = 5;
  // @inject_tag: help:"no memory" 
  uint32 nomem = 6;
  // @inject_tag: help:"number of multiple FR in a RTT window"
  uint32 fastretransinrtt = 7;
  // @inject_tag: help:"nagle allowed sending"
  uint32 naglesent = 8;
  // @inject_tag: help:"nagle doesn't allow sending"
  uint32 naglequeued = 9;
  // @inject_tag: help:"max burst doesn't allow sending" 
  uint32 maxburstqueued = 10;
  // @inject_tag: help:"look ahead tells us no memory in interface ring buffer OR we had a send error and are queuing one send."
  uint32 ifnomemqueued = 11;
  // @inject_tag: help:"total number of window probes sent"
  uint32 windowprobed = 12;
  // @inject_tag: help:"total times an output error causes us to clamp down on next user send."
  uint32 lowlevelerr = 13;
  // @inject_tag: help:"total times sctp_senderrors were caused from a user send from a user invoked send not a sack response"
  uint32 lowlevelerrusr = 14; 
  // @inject_tag: help:"Number of in data drops due to chunk limit reached"
  uint32 datadropchklmt = 15;
  // @inject_tag: help:"Number of in data drops due to rwnd limit reached"
  uint32 datadroprwnd = 16;
  // @inject_tag: help:"Number of times a ECN reduced the cwnd"
  uint32 ecnereducedcwnd = 17;
  // @inject_tag: help:"Used express lookup via vtag"
  uint32 vtagexpress = 18;
  // @inject_tag: help:"Collision in express lookup."
  uint32 vtagbogus = 19;
  // @inject_tag: help:"Number of times the sender ran dry of user data on primary"
  uint32 primary_randry = 20;
  // @inject_tag: help:"Same for above"
  uint32 cmt_randry = 21;
  // @inject_tag: help:"Sacks the slow way"
  uint32 slowpath_sack = 22;
  // @inject_tag: help:"Window Update only sacks sent"
  uint32 wu_sacks_sent = 23;
  // @inject_tag: help:"number of sends with sinfo_flags !=0"
  uint32 sends_with_flags = 24;
  // @inject_tag: help:"number of unordered sends"
  uint32 sends_with_unord = 25;
  // @inject_tag: help:"number of sends with EOF flag set"
  uint32 sends_with_eof = 26;
  // @inject_tag: help:"number of sends with ABORT flag set" 
  uint32 sends_with_abort = 27;
  // @inject_tag: help:"number of times protocol drain called" 
  uint32 protocol_drain_calls = 28;
  // @inject_tag: help:"number of times we did a protocol drain" 
  uint32 protocol_drains_done = 29;
  // @inject_tag: help:"Number of times recv was called with peek" 
  uint32 read_peeks = 30;
  // @inject_tag: help:"Number of cached chunks used"
  uint32 cached_chk = 31; 
  // @inject_tag: help:"Number of cached stream oq's used"
  uint32 cached_strmoq = 32;
  // @inject_tag: help:"Number of unread messages abandoned by close"
  uint32 left_abandon = 33;
  // @inject_tag: help:"Unused. send burst avoidance, already max burst inflight to net"
  uint32 send_burst_avoid = 34;
  // @inject_tag: help:"Send cwnd full avoidance, already max burst inflight to net"
  uint32 send_cwnd_avoid = 35; 
  // @inject_tag: help:"number of map array over-runs via fwd-tsn's"
  uint32 fwdtsn_map_over = 36; 
}
