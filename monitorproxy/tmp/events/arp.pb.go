// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arp.proto

/*
Package events is a generated protocol buffer package.

It is generated from these files:
	arp.proto
	cgnat.proto
	client.proto
	cubs_ev.proto
	debug_runcmd.proto
	debug_tun.proto
	debug_wanopt_netstat.proto
	deviceha.proto
	dns.proto
	dns_report.proto
	interfaces.proto
	path_report.proto
	pcap_report.proto
	ping.proto
	syslog.proto
	system.proto
	traceroute_report.proto
	usb.proto
	vpn_event.proto

It has these top-level messages:
	ARPEntry
	ARPTable
	CGNATEvent
	OSInfo
	ClientInfo
	UserInfo
	Empty
	DebugCommand
	DebugTunnelInfo
	DebugWanoptNetstat
	DeviceHAStatus
	DnsAnswerEntry
	DnsAnswer
	DNSReport
	Interface
	Interfaces
	Port
	Ports
	ListPathReport
	PacketCaptureReport
	PacketCaptureUploadedMessage
	PingReport
	TrafficLog
	IDPLog
	FirewallLog
	GEOIPLog
	Devicelog
	FirmwareDownloaded
	FirmwareDownloadProcess
	FirmwareUpgradeStarted
	SystemAlertMessage
	PackageUpgradeStartMessage
	PackageUpgradeResultMessage
	DiskLogUploadMessage
	TracerouteReport
	USBDeviceInfo
	VPNPeerInfo
	VPNPolicy
	IKE
	IPSec
	VPNConnInfo
	VPNEvent
	VPNTestResult
*/
package events

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ARPEntry struct {
	IpAddr     []byte `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr"`
	MacAddress []byte `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address"`
	Device     string `protobuf:"bytes,3,opt,name=device" json:"device"`
}

func (m *ARPEntry) Reset()                    { *m = ARPEntry{} }
func (m *ARPEntry) String() string            { return proto.CompactTextString(m) }
func (*ARPEntry) ProtoMessage()               {}
func (*ARPEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ARPEntry) GetIpAddr() []byte {
	if m != nil {
		return m.IpAddr
	}
	return nil
}

func (m *ARPEntry) GetMacAddress() []byte {
	if m != nil {
		return m.MacAddress
	}
	return nil
}

func (m *ARPEntry) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type ARPTable struct {
	DeviceSn  string                     `protobuf:"bytes,1,opt,name=device_sn,json=deviceSn" json:"device_sn"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp"`
	Entry     []*ARPEntry                `protobuf:"bytes,3,rep,name=entry" json:"entry"`
}

func (m *ARPTable) Reset()                    { *m = ARPTable{} }
func (m *ARPTable) String() string            { return proto.CompactTextString(m) }
func (*ARPTable) ProtoMessage()               {}
func (*ARPTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ARPTable) GetDeviceSn() string {
	if m != nil {
		return m.DeviceSn
	}
	return ""
}

func (m *ARPTable) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *ARPTable) GetEntry() []*ARPEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func init() {
	proto.RegisterType((*ARPEntry)(nil), "events.ARPEntry")
	proto.RegisterType((*ARPTable)(nil), "events.ARPTable")
}

func init() { proto.RegisterFile("arp.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x15, 0x22, 0x42, 0x7d, 0x61, 0x40, 0x1e, 0xc0, 0x2a, 0x43, 0xa3, 0x0e, 0x28, 0x93,
	0x2b, 0x95, 0x85, 0x35, 0x03, 0x3b, 0x32, 0x1d, 0x91, 0x2a, 0x27, 0x3e, 0x2a, 0x4b, 0xf5, 0x87,
	0x6c, 0x53, 0x89, 0x9f, 0xc0, 0xbf, 0x46, 0xd8, 0x0d, 0x1d, 0xef, 0x79, 0x5f, 0xdd, 0x3d, 0x07,
	0x44, 0x06, 0xcf, 0x7d, 0x70, 0xc9, 0xd1, 0x06, 0x4f, 0x68, 0x53, 0x5c, 0xae, 0x0e, 0xce, 0x1d,
	0x8e, 0xb8, 0xc9, 0x74, 0xfc, 0xfa, 0xdc, 0x24, 0x6d, 0x30, 0x26, 0x69, 0xce, 0xc5, 0xf5, 0x07,
	0x2c, 0x06, 0xf1, 0xf6, 0x6a, 0x53, 0xf8, 0xa6, 0x0f, 0x70, 0xa3, 0xfd, 0x5e, 0x2a, 0x15, 0x58,
	0xd5, 0x55, 0xfd, 0xad, 0x68, 0xb4, 0x1f, 0x94, 0x0a, 0x74, 0x05, 0xad, 0x91, 0x53, 0x4e, 0x30,
	0x46, 0x76, 0x95, 0x43, 0x30, 0x72, 0x1a, 0x0a, 0xa1, 0xf7, 0xd0, 0x28, 0x3c, 0xe9, 0x09, 0x59,
	0xdd, 0x55, 0x3d, 0x11, 0xe7, 0x69, 0xfd, 0x53, 0xe5, 0xf5, 0x3b, 0x39, 0x1e, 0x91, 0x3e, 0x02,
	0x29, 0x78, 0x1f, 0x6d, 0x3e, 0x40, 0xc4, 0xa2, 0x80, 0x77, 0x4b, 0x5f, 0x80, 0xfc, 0xab, 0xe5,
	0x03, 0xed, 0x76, 0xc9, 0x8b, 0x3c, 0x9f, 0xe5, 0xf9, 0x6e, 0x6e, 0x88, 0x4b, 0x99, 0x3e, 0xc1,
	0x35, 0xfe, 0xe9, 0xb3, 0xba, 0xab, 0xfb, 0x76, 0x7b, 0xc7, 0xcb, 0xeb, 0x7c, 0x7e, 0x4b, 0x94,
	0x78, 0x6c, 0xf2, 0x9a, 0xe7, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x13, 0x84, 0xb6, 0x81, 0x26,
	0x01, 0x00, 0x00,
}
