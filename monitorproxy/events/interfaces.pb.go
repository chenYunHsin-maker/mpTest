// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interfaces.proto

package events

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type InterfaceOperatingState int32

const (
	InterfaceOperatingState_InterfaceStateUnknown InterfaceOperatingState = 0
	InterfaceOperatingState_InterfaceStateUp      InterfaceOperatingState = 1
	InterfaceOperatingState_InterfaceStateDown    InterfaceOperatingState = 2
)

var InterfaceOperatingState_name = map[int32]string{
	0: "InterfaceStateUnknown",
	1: "InterfaceStateUp",
	2: "InterfaceStateDown",
}
var InterfaceOperatingState_value = map[string]int32{
	"InterfaceStateUnknown": 0,
	"InterfaceStateUp":      1,
	"InterfaceStateDown":    2,
}

func (x InterfaceOperatingState) String() string {
	return proto.EnumName(InterfaceOperatingState_name, int32(x))
}
func (InterfaceOperatingState) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

type InterfaceType int32

const (
	InterfaceType_ethernet InterfaceType = 0
	InterfaceType_l2vlan   InterfaceType = 1
	InterfaceType_pppoe    InterfaceType = 2
	InterfaceType_pptp     InterfaceType = 3
	InterfaceType_gre      InterfaceType = 4
	InterfaceType_bridge   InterfaceType = 5
	InterfaceType_vti      InterfaceType = 6
	InterfaceType_cellular InterfaceType = 7
)

var InterfaceType_name = map[int32]string{
	0: "ethernet",
	1: "l2vlan",
	2: "pppoe",
	3: "pptp",
	4: "gre",
	5: "bridge",
	6: "vti",
	7: "cellular",
}
var InterfaceType_value = map[string]int32{
	"ethernet": 0,
	"l2vlan":   1,
	"pppoe":    2,
	"pptp":     3,
	"gre":      4,
	"bridge":   5,
	"vti":      6,
	"cellular": 7,
}

func (x InterfaceType) String() string {
	return proto.EnumName(InterfaceType_name, int32(x))
}
func (InterfaceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

type CellularInterfaceState int32

const (
	CellularInterfaceState_CellularStateUnknown            CellularInterfaceState = 0
	CellularInterfaceState_CellularStateNoDevice           CellularInterfaceState = 1
	CellularInterfaceState_CellularStateConnected          CellularInterfaceState = 2
	CellularInterfaceState_CellularStateNoConnection       CellularInterfaceState = 3
	CellularInterfaceState_CellularStateNoConnectionFailed CellularInterfaceState = 4
)

var CellularInterfaceState_name = map[int32]string{
	0: "CellularStateUnknown",
	1: "CellularStateNoDevice",
	2: "CellularStateConnected",
	3: "CellularStateNoConnection",
	4: "CellularStateNoConnectionFailed",
}
var CellularInterfaceState_value = map[string]int32{
	"CellularStateUnknown":            0,
	"CellularStateNoDevice":           1,
	"CellularStateConnected":          2,
	"CellularStateNoConnection":       3,
	"CellularStateNoConnectionFailed": 4,
}

func (x CellularInterfaceState) String() string {
	return proto.EnumName(CellularInterfaceState_name, int32(x))
}
func (CellularInterfaceState) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

type PortOperatingState int32

const (
	PortOperatingState_PortStateUnknown PortOperatingState = 0
	PortOperatingState_PortStateUp      PortOperatingState = 1
	PortOperatingState_PortStateDown    PortOperatingState = 2
)

var PortOperatingState_name = map[int32]string{
	0: "PortStateUnknown",
	1: "PortStateUp",
	2: "PortStateDown",
}
var PortOperatingState_value = map[string]int32{
	"PortStateUnknown": 0,
	"PortStateUp":      1,
	"PortStateDown":    2,
}

func (x PortOperatingState) String() string {
	return proto.EnumName(PortOperatingState_name, int32(x))
}
func (PortOperatingState) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

type Interface struct {
	InterfaceName  string                  `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName" json:"interface_name"`
	Ipv6Addr       [][]byte                `protobuf:"bytes,2,rep,name=ipv6_addr,json=ipv6Addr,proto3" json:"ipv6_addr"`
	Ipv4Addr       [][]byte                `protobuf:"bytes,3,rep,name=ipv4_addr,json=ipv4Addr,proto3" json:"ipv4_addr"`
	State          InterfaceOperatingState `protobuf:"varint,4,opt,name=state,enum=events.InterfaceOperatingState" json:"state"`
	InterfaceType  InterfaceType           `protobuf:"varint,5,opt,name=interface_type,json=interfaceType,enum=events.InterfaceType" json:"interface_type"`
	CellularState  CellularInterfaceState  `protobuf:"varint,6,opt,name=cellular_state,json=cellularState,enum=events.CellularInterfaceState" json:"cellular_state"`
	CurrentStatus  string                  `protobuf:"bytes,7,opt,name=current_status,json=currentStatus" json:"current_status"`
	GlobalIpv4Addr [][]byte                `protobuf:"bytes,8,rep,name=global_ipv4_addr,json=globalIpv4Addr,proto3" json:"global_ipv4_addr"`
}

func (m *Interface) Reset()                    { *m = Interface{} }
func (m *Interface) String() string            { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()               {}
func (*Interface) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *Interface) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *Interface) GetIpv6Addr() [][]byte {
	if m != nil {
		return m.Ipv6Addr
	}
	return nil
}

func (m *Interface) GetIpv4Addr() [][]byte {
	if m != nil {
		return m.Ipv4Addr
	}
	return nil
}

func (m *Interface) GetState() InterfaceOperatingState {
	if m != nil {
		return m.State
	}
	return InterfaceOperatingState_InterfaceStateUnknown
}

func (m *Interface) GetInterfaceType() InterfaceType {
	if m != nil {
		return m.InterfaceType
	}
	return InterfaceType_ethernet
}

func (m *Interface) GetCellularState() CellularInterfaceState {
	if m != nil {
		return m.CellularState
	}
	return CellularInterfaceState_CellularStateUnknown
}

func (m *Interface) GetCurrentStatus() string {
	if m != nil {
		return m.CurrentStatus
	}
	return ""
}

func (m *Interface) GetGlobalIpv4Addr() [][]byte {
	if m != nil {
		return m.GlobalIpv4Addr
	}
	return nil
}

type Interfaces struct {
	Interface []*Interface               `protobuf:"bytes,1,rep,name=interface" json:"interface"`
	DeviceSn  string                     `protobuf:"bytes,2,opt,name=device_sn,json=deviceSn" json:"device_sn"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp"`
}

func (m *Interfaces) Reset()                    { *m = Interfaces{} }
func (m *Interfaces) String() string            { return proto.CompactTextString(m) }
func (*Interfaces) ProtoMessage()               {}
func (*Interfaces) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *Interfaces) GetInterface() []*Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

func (m *Interfaces) GetDeviceSn() string {
	if m != nil {
		return m.DeviceSn
	}
	return ""
}

func (m *Interfaces) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Port struct {
	PortName string             `protobuf:"bytes,1,opt,name=port_name,json=portName" json:"port_name"`
	State    PortOperatingState `protobuf:"varint,2,opt,name=state,enum=events.PortOperatingState" json:"state"`
}

func (m *Port) Reset()                    { *m = Port{} }
func (m *Port) String() string            { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()               {}
func (*Port) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *Port) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *Port) GetState() PortOperatingState {
	if m != nil {
		return m.State
	}
	return PortOperatingState_PortStateUnknown
}

type Ports struct {
	Port      []*Port                    `protobuf:"bytes,1,rep,name=port" json:"port"`
	DeviceSn  string                     `protobuf:"bytes,2,opt,name=device_sn,json=deviceSn" json:"device_sn"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp"`
}

func (m *Ports) Reset()                    { *m = Ports{} }
func (m *Ports) String() string            { return proto.CompactTextString(m) }
func (*Ports) ProtoMessage()               {}
func (*Ports) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *Ports) GetPort() []*Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *Ports) GetDeviceSn() string {
	if m != nil {
		return m.DeviceSn
	}
	return ""
}

func (m *Ports) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*Interface)(nil), "events.Interface")
	proto.RegisterType((*Interfaces)(nil), "events.Interfaces")
	proto.RegisterType((*Port)(nil), "events.Port")
	proto.RegisterType((*Ports)(nil), "events.Ports")
	proto.RegisterEnum("events.InterfaceOperatingState", InterfaceOperatingState_name, InterfaceOperatingState_value)
	proto.RegisterEnum("events.InterfaceType", InterfaceType_name, InterfaceType_value)
	proto.RegisterEnum("events.CellularInterfaceState", CellularInterfaceState_name, CellularInterfaceState_value)
	proto.RegisterEnum("events.PortOperatingState", PortOperatingState_name, PortOperatingState_value)
}

func init() { proto.RegisterFile("interfaces.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xed, 0x24, 0x4d, 0xa6, 0x4d, 0xd8, 0xae, 0xda, 0xe2, 0x06, 0x41, 0xa3, 0x20, 0x24,
	0x2b, 0x07, 0x17, 0x85, 0x82, 0x38, 0x70, 0x41, 0x2d, 0x48, 0xbd, 0x14, 0xe4, 0xb6, 0xe7, 0xc8,
	0x89, 0xa7, 0xc6, 0xe0, 0xec, 0xae, 0xd6, 0x9b, 0xa0, 0xde, 0xf8, 0x11, 0xfc, 0x0d, 0x7e, 0x20,
	0x37, 0xb4, 0xeb, 0xaf, 0xa4, 0x69, 0x8f, 0x1c, 0xf7, 0xbd, 0x79, 0xb3, 0x33, 0x6f, 0x1e, 0x90,
	0x84, 0x29, 0x94, 0xb7, 0xe1, 0x0c, 0x33, 0x5f, 0x48, 0xae, 0x38, 0x6d, 0xe1, 0x12, 0x99, 0xca,
	0xfa, 0xc7, 0x31, 0xe7, 0x71, 0x8a, 0x27, 0x06, 0x9d, 0x2e, 0x6e, 0x4f, 0x54, 0x32, 0xc7, 0x4c,
	0x85, 0x73, 0x91, 0x17, 0x0e, 0xff, 0xda, 0xd0, 0xb9, 0x28, 0xd5, 0xf4, 0x15, 0xf4, 0xaa, 0x56,
	0x13, 0x16, 0xce, 0xd1, 0xb5, 0x06, 0x96, 0xd7, 0x09, 0xba, 0x15, 0x7a, 0x19, 0xce, 0x91, 0x3e,
	0x83, 0x4e, 0x22, 0x96, 0xef, 0x26, 0x61, 0x14, 0x49, 0xd7, 0x1e, 0x38, 0xde, 0x6e, 0xd0, 0xd6,
	0xc0, 0xc7, 0x28, 0x92, 0x05, 0x79, 0x9a, 0x93, 0x4e, 0x45, 0x9e, 0x1a, 0xf2, 0x2d, 0x34, 0x33,
	0x15, 0x2a, 0x74, 0x1b, 0x03, 0xcb, 0xeb, 0x8d, 0x8f, 0xfd, 0x7c, 0x4e, 0xbf, 0x1a, 0xe1, 0x8b,
	0x40, 0x19, 0xaa, 0x84, 0xc5, 0x57, 0xba, 0x2c, 0xc8, 0xab, 0xe9, 0x87, 0xd5, 0xb9, 0xd4, 0x9d,
	0x40, 0xb7, 0x69, 0xf4, 0x07, 0x1b, 0xfa, 0xeb, 0x3b, 0x81, 0x2b, 0xe3, 0xea, 0x27, 0xfd, 0x04,
	0xbd, 0x19, 0xa6, 0xe9, 0x22, 0x0d, 0xe5, 0x24, 0xff, 0xbd, 0x65, 0xd4, 0x2f, 0x4a, 0xf5, 0x59,
	0xc1, 0x56, 0x5d, 0xf2, 0xcf, 0xbb, 0xa5, 0xca, 0x3c, 0xb5, 0x39, 0xb3, 0x85, 0x94, 0xc8, 0x94,
	0xe9, 0xb2, 0xc8, 0xdc, 0xed, 0xdc, 0x9c, 0x02, 0xbd, 0x32, 0x20, 0xf5, 0x80, 0xc4, 0x29, 0x9f,
	0x86, 0xe9, 0xa4, 0xb6, 0xa1, 0x6d, 0x6c, 0xe8, 0xe5, 0xf8, 0x45, 0x61, 0xc6, 0xf0, 0xb7, 0x05,
	0x50, 0x7d, 0x99, 0xd1, 0x13, 0xe8, 0x54, 0x73, 0xbb, 0xd6, 0xc0, 0xf1, 0x76, 0xc6, 0x7b, 0x1b,
	0xfb, 0x05, 0x75, 0x8d, 0x76, 0x3a, 0xc2, 0x65, 0x32, 0xc3, 0x49, 0xc6, 0x5c, 0xdb, 0xcc, 0xd2,
	0xce, 0x81, 0x2b, 0x46, 0xdf, 0x43, 0xa7, 0xba, 0xb5, 0xeb, 0x0c, 0x2c, 0x6f, 0x67, 0xdc, 0xf7,
	0xf3, 0x34, 0xf8, 0x65, 0x1a, 0xfc, 0xeb, 0xb2, 0x22, 0xa8, 0x8b, 0x87, 0x37, 0xd0, 0xf8, 0xca,
	0xa5, 0xd2, 0xed, 0x05, 0x97, 0x6a, 0x35, 0x07, 0x6d, 0x0d, 0x98, 0x08, 0xbc, 0x2e, 0x0f, 0x69,
	0x1b, 0x2b, 0xfb, 0xe5, 0xa0, 0x5a, 0xf9, 0xe0, 0x0d, 0x87, 0xbf, 0x2c, 0x68, 0x6a, 0x36, 0xa3,
	0x03, 0x68, 0xe8, 0x3e, 0xc5, 0x8e, 0xbb, 0xab, 0xd2, 0xc0, 0x30, 0xff, 0x69, 0xb3, 0xd1, 0x14,
	0x9e, 0x3e, 0x12, 0x34, 0x7a, 0x04, 0x07, 0xeb, 0xd7, 0xbf, 0x61, 0x3f, 0x18, 0xff, 0xc9, 0xc8,
	0x16, 0xdd, 0x07, 0x72, 0x8f, 0x12, 0xc4, 0xa2, 0x87, 0x40, 0xd7, 0xd1, 0x73, 0x5d, 0x6d, 0x8f,
	0xbe, 0x43, 0x77, 0x2d, 0x8c, 0x74, 0x17, 0xda, 0xa8, 0xbe, 0xa1, 0x64, 0xa8, 0xc8, 0x16, 0x05,
	0x68, 0xa5, 0xe3, 0x65, 0x1a, 0x32, 0x62, 0xd1, 0x0e, 0x34, 0x85, 0x10, 0x1c, 0x89, 0x4d, 0xdb,
	0xd0, 0x10, 0x42, 0x09, 0xe2, 0xd0, 0x6d, 0x70, 0x62, 0x89, 0xa4, 0xa1, 0x2b, 0xa7, 0x32, 0x89,
	0x62, 0x24, 0x4d, 0x0d, 0x2e, 0x55, 0x42, 0x5a, 0xba, 0x59, 0x19, 0x4a, 0xb2, 0x3d, 0xfa, 0x63,
	0xc1, 0xe1, 0xc3, 0xd9, 0xa5, 0x2e, 0xec, 0x9f, 0xad, 0xa6, 0xb7, 0x5e, 0xe7, 0x08, 0x0e, 0xd6,
	0x98, 0x4b, 0x7e, 0x6e, 0x9c, 0x25, 0x16, 0xed, 0xd7, 0xed, 0x0c, 0x75, 0xc6, 0x19, 0xc3, 0x99,
	0xc2, 0x88, 0xd8, 0xf4, 0x39, 0x1c, 0xdd, 0x93, 0x15, 0x6c, 0xc2, 0x19, 0x71, 0xe8, 0x4b, 0x38,
	0x7e, 0x94, 0xfe, 0x1c, 0x26, 0x29, 0x46, 0xa4, 0x31, 0xba, 0x04, 0xba, 0x99, 0x0f, 0xed, 0xaf,
	0x46, 0xef, 0x8d, 0xf9, 0x04, 0x76, 0x6a, 0x54, 0x1b, 0xbe, 0x07, 0xdd, 0x0a, 0xc8, 0xbd, 0x9e,
	0xb6, 0xcc, 0xb9, 0xdf, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xb9, 0xc0, 0xc6, 0xe8, 0x00, 0x05,
	0x00, 0x00,
}
